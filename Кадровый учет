using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MK
{
    class Program
    {
        static void Main(string[] args)
        {
            const string AddDossierCommand = "1";
            const string RemoveAllDossiers = "2";
            const string DeleteDossier = "3";
            const string SearchCommand = "4";
            const string CommandExit = "5";

            bool isOpen = true;

            string[] employeeData = new string[0];
            string[] jobTitle = new string[0];

            while (isOpen)
            {
                Console.WriteLine($"{AddDossierCommand}- Добавить досье.\n{RemoveAllDossiers}- Вывести все досье. \n{DeleteDossier}- Удалить досье. \n{SearchCommand}- Поиск досье. \n{CommandExit}- Выход.\n");
                Console.Write("Ввод: ");
                string request = Console.ReadLine();

                switch (request)
                {
                    case AddDossierCommand:
                        DossierEntry(ref employeeData, ref jobTitle);
                        break;
                    case RemoveAllDossiers:
                        DossierOutput(employeeData, jobTitle);
                        break;
                    case DeleteDossier:
                        DeletingData(ref employeeData, ref jobTitle);
                        break;
                    case SearchCommand:
                        DossierSearch(ref employeeData, ref jobTitle);
                        break;
                    case CommandExit:
                        isOpen = false;
                        break;
                }
                Console.WriteLine("\nНажмите любую клавишу...");
                Console.ReadKey();
                Console.Clear();
            }
        }

        static void DossierEntry(ref string[] employeeData, ref string[] jobTitle)
        {
            Console.WriteLine("\n\nВведите данные сотрудника\"ФИО\": ");
            employeeData = ArrayExpansion(employeeData);
            employeeData[employeeData.Length - 1] = Console.ReadLine();

            Console.WriteLine("\nВведите должность сотрудника: ");
            jobTitle = ArrayExpansion(jobTitle);
            jobTitle[jobTitle.Length - 1] = Console.ReadLine();
        }

        static string[] ArrayExpansion(string[] arrayExpansion)
        {
            string[] extendedArray = new string[arrayExpansion.Length + 1];

            for (int i = 0; i < arrayExpansion.Length; i++)
            {
                extendedArray[i] = arrayExpansion[i];
            }

            arrayExpansion = extendedArray;

            return arrayExpansion;
        }

        static void DossierOutput(string[] employeeData, string[] jobTitle)
        {
            Console.WriteLine("\nДосье:");

            for (int i = 0; i < employeeData.Length; i++)
            {
                Console.WriteLine($"{i + 1}) {employeeData[i]} -- {jobTitle[i]}");
            }
        }

        static void DeletingData(ref string[] employeeData, ref string[] jobTitle)
        {
            int deleteDocument;
            int minimumDocument = 0;

            Console.Write("\nВведите номер документа, которых нужно удалить: ");
            deleteDocument = Convert.ToInt32(Console.ReadLine());

            if (employeeData.Length < deleteDocument - 1 || deleteDocument <= minimumDocument)
            {
                Console.WriteLine("Ошибка. Досье не найдено.");
            }
            else
            {
                employeeData = ArrayReduction(employeeData, deleteDocument);
                jobTitle = ArrayReduction(jobTitle, deleteDocument);

                Console.WriteLine("\nДанные удалены.");
            }
        }
        static string[] ArrayReduction(string[] arrayReduction, int index)
        {
            string[] dataReduction = new string[arrayReduction.Length - 1];


            for (int i = 0; i < index - 1; i++)
            {
                dataReduction[i] = arrayReduction[i];
            }

            for (int i = index; i < arrayReduction.Length; i++)
            {
                dataReduction[i - 1] = arrayReduction[i];
            }

            arrayReduction = dataReduction;

            return arrayReduction;
        }

        static void DossierSearch(ref string[] employeeData, ref string[] jobTitle)
        {
            string dossierSearch;
            string employeeSearch;
            int serialNumber;
            int minimumDocument = 0;
            bool employeeFound = false;

            Console.WriteLine("\nПоиск сотрудника.");
            Console.WriteLine("\n1-Поиск по порядковому номеру введите.\n2-Поиск по фио или должности.");
            Console.Write("\nВвод: ");
            dossierSearch = Console.ReadLine();

            if (dossierSearch == "1")
            {
                Console.Write("\nВведите порядковый номер сотрудника: ");
                serialNumber = Convert.ToInt32(Console.ReadLine());

                if (employeeData.Length < serialNumber - 1 || serialNumber <= minimumDocument)
                {
                    Console.WriteLine("Ошибка. Досье не найдено.");
                }
                else
                {
                    Console.WriteLine($"{serialNumber}) {employeeData[serialNumber - 1]} -- {jobTitle[serialNumber - 1]}");
                }
            }
            else if (dossierSearch == "2")
            {
                Console.WriteLine("\nВведите данные сотрудника:");
                employeeSearch = Console.ReadLine();

                for (int i = 0; i < employeeData.Length; i++)
                {
                    if (employeeSearch.ToLower() == employeeData[i].ToLower() || employeeSearch.ToLower() == jobTitle[i].ToLower())
                    {
                        Console.WriteLine($"{i + 1}) {employeeData[i]} -- {jobTitle[i]}");
                        employeeFound = true;
                    }
                }
                if (employeeFound == false)
                {
                    Console.WriteLine("\nОшибка. Сотрудник не найден.");
                }
            }
            else
            {
                Console.WriteLine("\nОшибка. Не верно выбран раздел.");
            }
        }
    }
}
